---
- name: Install tmux packages
  become: yes
  yum: name={{ item }} state=present
  with_items:
    - libevent-devel
    - glibc-static
    - ncurses-devel

- name: Get latest tmux version
  shell: >
    curl -sI https://github.com/tmux/tmux/releases/latest | awk -F'/' '/^Location:/{print $NF}'
  register: tmux_latest_version

- name: Download latest tmux
  become: yes
  get_url: url=https://github.com/tmux/tmux/releases/download/{{ tmux_latest_version.stdout }}/tmux-{{ tmux_latest_version.stdout }}.tar.gz dest=/tmp/tmux-{{ tmux_latest_version.stdout }}.tar.gz
  register: download_tmux

- name: Extract tmux
  become: yes
  command: tar zxvf /tmp/tmux-{{ tmux_latest_version.stdout }}.tar.gz chdir=/tmp/

- name: comfigure tmux
  command: chdir=/tmp/tmux-{{ tmux_latest_version.stdout }} ./configure  --prefix=/usr/local/tmux-{{ tmux_latest_version.stdout }}

- name: make tmux
  command: chdir=/tmp/tmux-{{ tmux_latest_version.stdout }} make

- name: make install tmux
  command: chdir=/tmp/tmux-{{ tmux_latest_version.stdout }} make install

- name: Git clone tpm
  become: yes
  become_user: "{{ user.name | default(ansible_env.USER) }}"
  git:
    repo: 'https://github.com/tmux-plugins/tpm'
    dest: '~/.tmux/plugins/tpm'

- name: set template .tmux.conf file to home
  become: yes
  become_user: "{{ user.name | default(ansible_env.USER) }}"
  template: src=tmux.conf.j2 dest=~{{ user.name }}/.tmux.conf owner={{ user.name }} group={{ user.name }} mode="u=rw,g=r,o=r"

- name: Add .zshrc tmux path
  lineinfile:
    dest=~{{ user.name }}/.zshrc
    line="export PATH=$PATH:/usr/local/tmux-{{ tmux_latest_version.stdout }}/bin"
    insertbefore=BOF state=present
